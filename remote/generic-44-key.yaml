---
substitutions:
  diy1_red: "1.0"
  diy1_green: "1.0"
  diy1_blue: "1.0"
  diy2_red: "1.0"
  diy2_green: "1.0"
  diy2_blue: "1.0"
  diy3_red: "1.0"
  diy3_green: "1.0"
  diy3_blue: "1.0"
  diy4_red: "1.0"
  diy4_green: "1.0"
  diy4_blue: "1.0"
  diy5_red: "1.0"
  diy5_green: "1.0"
  diy5_blue: "1.0"
  diy6_red: "1.0"
  diy6_green: "1.0"
  diy6_blue: "1.0"    

globals:
  id: last_effect
  type: std::string
  initial_value: '"None"'

script:
  id: remote_process
  mode: single
  parameters:
    command: int
  then:
    - if:
        condition:
          - lambda: return command == 0xA35C;
        then:
          - light.dim_relative:
              id: remote_light
              relative_brightness: 10%

    - if:
        condition:
          - lambda: return command == 0xA25D;
        then:
          - light.dim_relative:
              id: remote_light
              relative_brightness: -10%

    - if:
        condition:
          - lambda: return command == 0xA25D;
        then:
          - light.dim_relative:
              id: remote_light
              relative_brightness: -10%

    - if:
        condition:
          - lambda: return command == 0xBE41;
        then:
          - lambda: |-
              auto effect = id(remote_light).get_effect_name();
              auto call = id(remote_light).make_call();
              if (effect != "None") {
                ESP_LOGD("EFFECT", "%s", effect.c_str());
                id(last_effect) = effect.c_str();
                call.set_effect("None");
                call.perform();
              } else {
                call.set_effect(id(last_effect));
                call.perform();
              }

    - if:
        condition:
          - lambda: return command == 0xBF40;
        then:
          - light.toggle: remote_light

    - if:
        condition:
          - lambda: return command == 0xA758;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 0.0
              blue: 0.0

    - if:
        condition:
          - lambda: return command == 0xA659;
        then:
          - light.control:
              id: remote_light
              red: 0.0
              green: 1.0
              blue: 0.0          

    - if:
        condition:
          - lambda: return command == 0xBA45;
        then:
          - light.control:
              id: remote_light
              red: 0.0
              green: 0.0
              blue: 1.0

    - if:
        condition:
          - lambda: return command == 0xBB44;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 1.0
              blue: 1.0

    - if:
        condition:
          - lambda: return command == 0xAB54;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 0.47
              blue: 0.0

    - if:
        condition:
          - lambda: return command == 0xAA55;
        then:
          - light.control:
              id: remote_light
              red: 0.0
              green: 1.0
              blue: 0.47

    - if:
        condition:
          - lambda: return command == 0xB649;
        then:
          - light.control:
              id: remote_light
              red: 0.0
              green: 0.62
              blue: 1.0
              
    - if:
        condition:
          - lambda: return command == 0xB748;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 0.66
              blue: 0.41

    - if:
        condition:
          - lambda: return command == 0xAF50;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 0.62
              blue: 0.0
              
    - if:
        condition:
          - lambda: return command == 0xAE51;
        then:
          - light.control:
              id: remote_light
              red: 0.0
              green: 1
              blue: 0.62

    - if:
        condition:
          - lambda: return command == 0xB24D;
        then:
          - light.control:
              id: remote_light
              red: 0.66
              green: 0.0
              blue: 1.0
                            
    - if:
        condition:
          - lambda: return command == 0xB34C;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 0.75
              blue: 0.55

    - if:
        condition:
          - lambda: return command == 0xE31C;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 0.78
              blue: 0.0

    - if:
        condition:
          - lambda: return command == 0xE21D;
        then:
          - light.control:
              id: remote_light
              red: 0.0
              green: 1.0
              blue: 0.86

    - if:
        condition:
          - lambda: return command == 0xE11E;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 0.0
              blue: 0.86

    - if:
        condition:
          - lambda: return command == 0xE01F;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 0.83
              blue: 0.7

    - if:
        condition:
          - lambda: return command == 0xE718;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 1.0
              blue: 0.0

    - if:
        condition:
          - lambda: return command == 0xE619;
        then:
          - light.control:
              id: remote_light
              red: 0.0
              green: 0.78
              blue: 1.0

    - if:
        condition:
          - lambda: return command == 0xE51A;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 0.0
              blue: 0.62

    - if:
        condition:
          - lambda: return command == 0xE41B;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 0.91
              blue: 0.85

    - if:
        condition:
          - lambda: return command == 0xEB14;
        then:
          - light.control:
              id: remote_light
              red: !lambda return id(remote_light).remote_values.get_red() + 0.05;
              transition_length: 0s

    - if:
        condition:
          - lambda: return command == 0xEA15;
        then:
          - light.control:
              id: remote_light
              green: !lambda return id(remote_light).remote_values.get_green() + 0.05;
              transition_length: 0s

    - if:
        condition:
          - lambda: return command == 0xE916;
        then:
          - light.control:
              id: remote_light
              blue: !lambda return id(remote_light).remote_values.get_blue() + 0.05;
              transition_length: 0s

    - if:
        condition:
          - lambda: return command == 0xE817;
        then:
          - lambda: |-
              auto call = id(remote_light).make_call();
              call.set_effect("Random");
              call.perform();

    - if:
        condition:
          - lambda: return command == 0xEF10;
        then:
          - light.control:
              id: remote_light
              red: !lambda return id(remote_light).remote_values.get_red() - 0.05;
              transition_length: 0s

    - if:
        condition:
          - lambda: return command == 0xEE11;
        then:
          - light.control:
              id: remote_light
              green: !lambda return id(remote_light).remote_values.get_green() - 0.05;
              transition_length: 0s

    - if:
        condition:
          - lambda: return command == 0xED12;
        then:
          - light.control:
              id: remote_light
              blue: !lambda return id(remote_light).remote_values.get_blue() - 0.05;
              transition_length: 0s

    - if:
        condition:
          - lambda: return command == 0xEC13;
        then:
          - lambda: |-
              auto call = id(remote_light).make_call();
              call.set_effect("Pulse");
              call.perform();

    - if:
        condition:
          - lambda: return command == 0xF30C;
        then:
          - light.control:
              id: remote_light
              red: $diy1_red
              blue: $diy1_blue
              green: $diy1_green

    - if:
        condition:
          - lambda: return command == 0xF20D;
        then:
          - light.control:
              id: remote_light
              red: $diy2_red
              blue: $diy2_blue
              green: $diy2_green

    - if:
        condition:
          - lambda: return command == 0xF10E;
        then:
          - light.control:
              id: remote_light
              red: $diy3_red
              blue: $diy3_blue
              green: $diy3_green

    - if:
        condition:
          - lambda: return command == 0xF00F;
        then:
          - lambda: |-
              auto call = id(remote_light).make_call();
              call.set_effect("Flicker");
              call.perform();

    - if:
        condition:
          - lambda: return command == 0xF708;
        then:
          - light.control:
              id: remote_light
              red: $diy4_red
              blue: $diy4_blue
              green: $diy4_green

    - if:
        condition:
          - lambda: return command == 0xF609;
        then:
          - light.control:
              id: remote_light
              red: $diy5_red
              blue: $diy5_blue
              green: $diy5_green

    - if:
        condition:
          - lambda: return command == 0xF50A;
        then:
          - light.control:
              id: remote_light
              red: $diy6_red
              blue: $diy6_blue
              green: $diy6_green

    - if:
        condition:
          - lambda: return command == 0xF40B;
        then:
          - lambda: |-
              auto call = id(remote_light).make_call();
              call.set_effect("Strobe");
              call.perform();

    - if:
        condition:
          - lambda: return command == 0xFB04;
        then:
          - lambda: |-
              auto call = id(remote_light).make_call();
              call.set_effect("Jump 3");
              call.perform();

    - if:
        condition:
          - lambda: return command == 0xFA05;
        then:
          - lambda: |-
              auto call = id(remote_light).make_call();
              call.set_effect("Jump 7");
              call.perform();

    - if:
        condition:
          - lambda: return command == 0xF906;
        then:
          - lambda: |-
              auto call = id(remote_light).make_call();
              call.set_effect("Fade 3");
              call.perform();

    - if:
        condition:
          - lambda: return command == 0xF807;
        then:
          - lambda: |-
              auto call = id(remote_light).make_call();
              call.set_effect("Fade 7");
              call.perform();

light:
  - platform: custom
    id: remote_light
    effects:
      - pulse:
      - strobe:
      - flicker:
      - random:
      - <<: !include { file: jump-3.yaml, vars: { id: remote_light } }
      - <<: !include { file: jump-7.yaml, vars: { id: remote_light } }
      - <<: !include { file: fade-3.yaml, vars: { id: remote_light } }
      - <<: !include { file: fade-7.yaml, vars: { id: remote_light } }                
