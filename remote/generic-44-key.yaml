---
substitutions:
  diy1_red: "1.0"
  diy1_green: "1.0"
  diy1_blue: "1.0"
  diy2_red: "1.0"
  diy2_green: "1.0"
  diy2_blue: "1.0"
  diy3_red: "1.0"
  diy3_green: "1.0"
  diy3_blue: "1.0"
  diy4_red: "1.0"
  diy4_green: "1.0"
  diy4_blue: "1.0"
  diy5_red: "1.0"
  diy5_green: "1.0"
  diy5_blue: "1.0"
  diy6_red: "1.0"
  diy6_green: "1.0"
  diy6_blue: "1.0"   

  key01_code: "0xA35C"
  key02_code: "0xA25D"
  key03_code: "0xBE41"
  key04_code: "0xBF40"
  key05_code: "0xA758"
  key06_code: "0xA659"
  key07_code: "0xBA45"
  key08_code: "0xBB44"
  key09_code: "0xAB54"
  key10_code: "0xAA55"
  key11_code: "0xB649"
  key12_code: "0xB748"
  key13_code: "0xAF50"
  key14_code: "0xAE51"
  key15_code: "0xB24D"
  key16_code: "0xB34C"
  key17_code: "0xE31C"
  key18_code: "0xE21D"
  key19_code: "0xE11E"
  key20_code: "0xE01F"
  key21_code: "0xE718"
  key22_code: "0xE619"
  key23_code: "0xE51A"
  key24_code: "0xE41B"
  key25_code: "0xEB14"
  key26_code: "0xEA15"
  key27_code: "0xE916"
  key28_code: "0xE817"
  key29_code: "0xEF10"
  key30_code: "0xEE11"
  key31_code: "0xED12"
  key32_code: "0xEC13"
  key33_code: "0xF30C"
  key34_code: "0xF20D"
  key35_code: "0xF10E"
  key36_code: "0xF00F"
  key37_code: "0xF708"
  key38_code: "0xF609"
  key39_code: "0xF50A"
  key40_code: "0xF40B"
  key41_code: "0xFB04"
  key42_code: "0xFA05"
  key43_code: "0xF906"
  key44_code: "0xF807"

globals:
  id: last_effect
  type: std::string
  initial_value: '"None"'

script:
  id: remote_process
  mode: single
  parameters:
    command: int
  then:
    - if:
        condition:
          - lambda: return command == $key01_code;
        then:
          - light.dim_relative:
              id: remote_light
              relative_brightness: 10%

    - if:
        condition:
          - lambda: return command == $key01_code;
        then:
          - light.dim_relative:
              id: remote_light
              relative_brightness: -10%

    - if:
        condition:
          - lambda: return command == $key02_code;
        then:
          - light.dim_relative:
              id: remote_light
              relative_brightness: -10%

    - if:
        condition:
          - lambda: return command == $key03_code;
        then:
          - lambda: |-
              auto effect = id(remote_light).get_effect_name();
              auto call = id(remote_light).make_call();
              if (effect != "None") {
                ESP_LOGD("EFFECT", "%s", effect.c_str());
                id(last_effect) = effect.c_str();
                call.set_effect("None");
                call.perform();
              } else {
                call.set_effect(id(last_effect));
                call.perform();
              }

    - if:
        condition:
          - lambda: return command == $key04_code;
        then:
          - light.toggle: remote_light

    - if:
        condition:
          - lambda: return command == $key05_code;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 0.0
              blue: 0.0

    - if:
        condition:
          - lambda: return command == $key06_code;
        then:
          - light.control:
              id: remote_light
              red: 0.0
              green: 1.0
              blue: 0.0          

    - if:
        condition:
          - lambda: return command == $key07_code;
        then:
          - light.control:
              id: remote_light
              red: 0.0
              green: 0.0
              blue: 1.0

    - if:
        condition:
          - lambda: return command == $key08_code;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 1.0
              blue: 1.0

    - if:
        condition:
          - lambda: return command == $key09_code;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 0.47
              blue: 0.0

    - if:
        condition:
          - lambda: return command == $key10_code;
        then:
          - light.control:
              id: remote_light
              red: 0.0
              green: 1.0
              blue: 0.47

    - if:
        condition:
          - lambda: return command == $key11_code;
        then:
          - light.control:
              id: remote_light
              red: 0.0
              green: 0.62
              blue: 1.0
              
    - if:
        condition:
          - lambda: return command == $key12_code;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 0.66
              blue: 0.41

    - if:
        condition:
          - lambda: return command == $key13_code;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 0.62
              blue: 0.0
              
    - if:
        condition:
          - lambda: return command == $key14_code;
        then:
          - light.control:
              id: remote_light
              red: 0.0
              green: 1
              blue: 0.62

    - if:
        condition:
          - lambda: return command == $key15_code;
        then:
          - light.control:
              id: remote_light
              red: 0.66
              green: 0.0
              blue: 1.0
                            
    - if:
        condition:
          - lambda: return command == $key16_code;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 0.75
              blue: 0.55

    - if:
        condition:
          - lambda: return command == $key17_code;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 0.78
              blue: 0.0

    - if:
        condition:
          - lambda: return command == $key18_code;
        then:
          - light.control:
              id: remote_light
              red: 0.0
              green: 1.0
              blue: 0.86

    - if:
        condition:
          - lambda: return command == $key19_code;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 0.0
              blue: 0.86

    - if:
        condition:
          - lambda: return command == $key20_code;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 0.83
              blue: 0.7

    - if:
        condition:
          - lambda: return command == $key21_code;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 1.0
              blue: 0.0

    - if:
        condition:
          - lambda: return command == $key22_code;
        then:
          - light.control:
              id: remote_light
              red: 0.0
              green: 0.78
              blue: 1.0

    - if:
        condition:
          - lambda: return command == $key23_code;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 0.0
              blue: 0.62

    - if:
        condition:
          - lambda: return command == $key24_code;
        then:
          - light.control:
              id: remote_light
              red: 1.0
              green: 0.91
              blue: 0.85

    - if:
        condition:
          - lambda: return command == $key25_code;
        then:
          - light.control:
              id: remote_light
              red: !lambda return id(remote_light).remote_values.get_red() + 0.05;
              transition_length: 0s

    - if:
        condition:
          - lambda: return command == $key26_code;
        then:
          - light.control:
              id: remote_light
              green: !lambda return id(remote_light).remote_values.get_green() + 0.05;
              transition_length: 0s

    - if:
        condition:
          - lambda: return command == $key27_code;
        then:
          - light.control:
              id: remote_light
              blue: !lambda return id(remote_light).remote_values.get_blue() + 0.05;
              transition_length: 0s

    - if:
        condition:
          - lambda: return command == $key28_code;
        then:
          - lambda: |-
              auto call = id(remote_light).make_call();
              call.set_effect("Random");
              call.perform();

    - if:
        condition:
          - lambda: return command == $key29_code;
        then:
          - light.control:
              id: remote_light
              red: !lambda return id(remote_light).remote_values.get_red() - 0.05;
              transition_length: 0s

    - if:
        condition:
          - lambda: return command == $key30_code;
        then:
          - light.control:
              id: remote_light
              green: !lambda return id(remote_light).remote_values.get_green() - 0.05;
              transition_length: 0s

    - if:
        condition:
          - lambda: return command == $key31_code;
        then:
          - light.control:
              id: remote_light
              blue: !lambda return id(remote_light).remote_values.get_blue() - 0.05;
              transition_length: 0s

    - if:
        condition:
          - lambda: return command == $key32_code;
        then:
          - lambda: |-
              auto call = id(remote_light).make_call();
              call.set_effect("Pulse");
              call.perform();

    - if:
        condition:
          - lambda: return command == $key33_code;
        then:
          - light.control:
              id: remote_light
              red: $diy1_red
              blue: $diy1_blue
              green: $diy1_green

    - if:
        condition:
          - lambda: return command == $key34_code;
        then:
          - light.control:
              id: remote_light
              red: $diy2_red
              blue: $diy2_blue
              green: $diy2_green

    - if:
        condition:
          - lambda: return command == $key35_code;
        then:
          - light.control:
              id: remote_light
              red: $diy3_red
              blue: $diy3_blue
              green: $diy3_green

    - if:
        condition:
          - lambda: return command == $key36_code;
        then:
          - lambda: |-
              auto call = id(remote_light).make_call();
              call.set_effect("Flicker");
              call.perform();

    - if:
        condition:
          - lambda: return command == $key37_code;
        then:
          - light.control:
              id: remote_light
              red: $diy4_red
              blue: $diy4_blue
              green: $diy4_green

    - if:
        condition:
          - lambda: return command == $key38_code;
        then:
          - light.control:
              id: remote_light
              red: $diy5_red
              blue: $diy5_blue
              green: $diy5_green

    - if:
        condition:
          - lambda: return command == $key39_code;
        then:
          - light.control:
              id: remote_light
              red: $diy6_red
              blue: $diy6_blue
              green: $diy6_green

    - if:
        condition:
          - lambda: return command == $key40_code;
        then:
          - lambda: |-
              auto call = id(remote_light).make_call();
              call.set_effect("Strobe");
              call.perform();

    - if:
        condition:
          - lambda: return command == $key41_code;
        then:
          - lambda: |-
              auto call = id(remote_light).make_call();
              call.set_effect("Jump 3");
              call.perform();

    - if:
        condition:
          - lambda: return command == $key42_code;
        then:
          - lambda: |-
              auto call = id(remote_light).make_call();
              call.set_effect("Jump 7");
              call.perform();

    - if:
        condition:
          - lambda: return command == $key43_code;
        then:
          - lambda: |-
              auto call = id(remote_light).make_call();
              call.set_effect("Fade 3");
              call.perform();

    - if:
        condition:
          - lambda: return command == $key44_code;
        then:
          - lambda: |-
              auto call = id(remote_light).make_call();
              call.set_effect("Fade 7");
              call.perform();

light:
  - platform: custom
    id: remote_light
    effects:
      - pulse:
      - strobe:
      - flicker:
      - random:
      - <<: !include { file: ../light-effects/jump-3.yaml, vars: { id: remote_light } }
      - <<: !include { file: ../light-effects/jump-7.yaml, vars: { id: remote_light } }
      - <<: !include { file: ../light-effects/fade-3.yaml, vars: { id: remote_light } }
      - <<: !include { file: ../light-effects/fade-7.yaml, vars: { id: remote_light } }                    
