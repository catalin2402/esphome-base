---
script:
  id: remote_process
  mode: single
  parameters:
    command: int
  then:
    - if:
        condition:
          - lambda: return command == 0xF609;
        then:
          - light.dim_relative:
              id: remote_light
              relative_brightness: 10%

    - if:
        condition:
          - lambda: return command == 0xE21D;
        then:
          - light.dim_relative:
              id: remote_light
              relative_brightness: -10%

    - if:
        condition:
          - lambda: return command == 0xE01F;
        then:
          - light.turn_off: remote_light

    - if:
        condition:
          - lambda: return command == 0xF20D;
        then:
          - light.turn_on: remote_light

    - if:
        condition:
          - lambda: return command == 0xE619;
        then:
          - light.control:
              id: remote_light
              color_mode: RGB              
              red: 1.0
              green: 0.0
              blue: 0.0

    - if:
        condition:
          - lambda: return command == 0xE41B;
        then:
          - light.control:
              id: remote_light
              color_mode: RGB                            
              red: 0.0
              green: 1.0
              blue: 0.0

    - if:
          condition:
            - lambda: return command == 0xEE11;
          then:
            - light.control:
                id: remote_light
                color_mode: RGB                              
                red: 0.0
                green: 0.0
                blue: 1.0

    - if:
          condition:
            - lambda: return command == 0xEA15;
          then:
            - light.control:
                id: lightstrip
                color_mode: COLOR_TEMPERATURE                    
                color_temperature: 2700 K

    - if:
          condition:
            - lambda: return command == 0xE817;
          then:
            - light.control:
                id: remote_light
                color_mode: RGB                   
                red: 1.0
                green: 0.47
                blue: 0.0

    - if:
          condition:
            - lambda: return command == 0xED12;
          then:
            - light.control:
                id: remote_light
                color_mode: RGB
                red: 0.0
                green: 1.0
                blue: 0.47

    - if:
          condition:
            - lambda: return command == 0xE916;
          then:
            - light.control:
                id: remote_light
                color_mode: RGB
                red: 0.0
                green: 0.62
                blue: 1.0

    - if:
          condition:
            - lambda: return command == 0xB24D;
          then:
            - light.control:
                id: lightstrip
                color_mode: COLOR_TEMPERATURE    
                color_temperature: 6000 K

    - if:
          condition:
            - lambda: return command == 0xBF40;
          then:
            - light.control:
                id: remote_light
                color_mode: RGB
                red: 1.0
                green: 0.62
                blue: 0.0

    - if:
          condition:
            - lambda: return command == 0xB34C;
          then:
            - light.control:
                id: remote_light
                color_mode: RGB
                red: 0.0
                green: 1
                blue: 0.62

    - if:
          condition:
            - lambda: return command == 0xFB04;
          then:
            - light.control:
                id: remote_light
                color_mode: RGB
                red: 0.66
                green: 0.0
                blue: 1.0

    - if:
          condition:
            - lambda: return command == 0xFF00;
          then:
            - light.control:
                id: lightstrip
                color_mode: COLOR_TEMPERATURE    
                color_temperature: !lambda return id(remote_light).remote_values.get_color_temperature() / 1.05f;

    - if:
          condition:
            - lambda: return command == 0xF50A;
          then:
            - light.control:
                id: remote_light
                color_mode: RGB
                red: 1.0
                green: 0.78
                blue: 0.0

    - if:
          condition:
            - lambda: return command == 0xE11E;
          then:
            - light.control:
                id: remote_light
                color_mode: RGB
                red: 0.0
                green: 1.0
                blue: 0.86

    - if:
          condition:
            - lambda: return command == 0xF10E;
          then:
            - light.control:
                id: remote_light
                color_mode: RGB
                red: 1.0
                green: 0.0
                blue: 0.86

    - if:
          condition:
            - lambda: return command == 0xE51A;
          then:
            - light.control:
                id: lightstrip
                color_mode: COLOR_TEMPERATURE    
                color_temperature: !lambda return id(remote_light).remote_values.get_color_temperature() * 1.05f;

    - if:
          condition:
            - lambda: return command == 0xE31C;
          then:
            - light.control:
                id: remote_light
                color_mode: RGB
                red: 1.0
                green: 1.0
                blue: 0.0

    - if:
          condition:
            - lambda: return command == 0xEB14;
          then:
            - light.control:
                id: remote_light
                color_mode: RGB
                red: 0.0
                green: 0.78
                blue: 1.0

    - if:
          condition:
            - lambda: return command == 0xF00F;
          then:
            - light.control:
                id: remote_light
                color_mode: RGB
                red: 1.0
                green: 0.0
                blue: 0.62

    - if:
        condition:
          - lambda: return command == 0xF30C;
        then:
          - lambda: |-
              auto call = id(remote_light).make_call();
              call.set_effect("Random");
              call.perform();
light:
  - platform: custom
    id: remote_light
    effects:
      - random:
      - pulse:
      - flicker:
      - strobe:
          name: Strobe
      - lambda: 
          name: Jump
          update_interval: 1s
          lambda: |-
            static int state = 0;
            auto call = id(remote_light).make_call();
            call.set_transition_length(0);
            switch (state) {
              case 0:
                call.set_rgb(1.0, 0.0, 0.0);
                break;
              case 1:
                call.set_rgb(0.0, 1.0, 0.0);
                break;
              case 2:
                call.set_rgb(0.0, 0.0, 1.0);
                break;
              case 3:
                call.set_rgb(0.5, 0.0, 0.5);
                break;
              case 4:
                call.set_rgb(0.33, 0.33, 0.33);
                break;
              case 5:
                call.set_rgb(0.0, 0.50, 0.50);
                break;
              case 6:
                call.set_rgb(0.5, 0.5, 0.0);
                break;
              default:
                call.set_rgb(0.5, 0.50, 0.0);
                break;
            }
            call.perform();
            state += 1;
            if (state == 7) state = 0;        
      - lambda: 
          name: Fade
          update_interval: 5s
          lambda: |-
            static int state = 0;
            auto call = id(remote_light).make_call();
            call.set_transition_length(5000);
            switch (state) {
              case 0:
                call.set_rgb(1.0, 0.0, 0.0);
                break;
              case 1:
                call.set_rgb(0.0, 1.0, 0.0);
                break;
              case 2:
                call.set_rgb(0.0, 0.0, 1.0);
                break;
              case 3:
                call.set_rgb(0.5, 0.0, 0.5);
                break;
              case 4:
                call.set_rgb(0.33, 0.33, 0.33);
                break;
              case 5:
                call.set_rgb(0.0, 0.50, 0.50);
                break;
              case 6:
                call.set_rgb(0.5, 0.5, 0.0);
                break;
              default:
                call.set_rgb(0.5, 0.50, 0.0);
                break;
            }
            call.perform();
            state += 1;
            if (state == 7) state = 0;
